<?import javafx.geometry.Insets?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.Pane?>
<?import javafx.scene.text.Font?>
<Pane id="login" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity"
      prefWidth="540" prefHeight="415" stylesheets="@css/login.css" xmlns="http://javafx.com/javafx/8.0.121"
      xmlns:fx="http://javafx.com/fxml/1">

    <!--
    组件
    序号	名称 (En)	        名称 (Ch)	    功能
    1	Pane	            面板	            用于承载其他元素
    2	Label	            标签	            可以添加文字、图片等内容
    3	TextField	        明文输入框	    单行文字内容
    4	PasswordField	    密文输入框	    单行密码内容
    5	TextArea	        多行输入框	    会话内容编辑框
    6	Button	            按钮	            登陆、发送消息、退出等
    7	ListView	        列表	            好友栏、对话栏，也可以 ListView 里面填充 ListView，这个用在好友栏多种内容的实现
    -->

    <children>

<!--         定义一个 Pane，并设置宽高，之后在整个面板里中添加 logo、最小化、关闭操作-->
        <Pane id="operation" prefWidth="540" prefHeight="158">
<!--            <children>，来装载元素-->
            <children>
<!--                模块：表头 宽*高：200 * 15 描述：定义 logo 和文案，这里默认显示文字;-->
                <Label id="login_logo" styleClass="logo" layoutX="10" layoutY="5" prefWidth="200" prefHeight="15" text="超级登录 * 世界无敌"
                       style="-fx-text-fill:#666666;"/>
<!--               最小化按钮处理 -->
                <Button id="login_min" styleClass="min" layoutX="454" prefWidth="43" prefHeight="32"/>
<!--               关闭操作处理 -->
                <Button id="login_close" styleClass="close" layoutX="497" prefWidth="43" prefHeight="32"/>
            </children>
        </Pane>

<!--        头像(Pane)-->
        <Pane id="headImg" layoutX="80" layoutY="200" prefWidth="100" prefHeight="100"/>

<!--
        用户 ID 输入框(TextField)
            TextField 是一个单行明文内容输入区域，在这里不仅设置了宽高，还设置了相对位置；layoutX、layoutY
            同时我们设置了提示文字，这个在这里比较简单直接使用；promptText 即可。例如：promptText="账号"
-->
        <TextField id="userId" layoutX="200" layoutY="200" prefWidth="250"  prefHeight="45" promptText="账号">
            <!--padding.Insets，如果你写过 CSS，可能会知道。这是一个设置输入框内，文字输入区域距离左面的空出位置。一般空出的位置可以设置一个背景图片-->
            <padding>
                <Insets left="10"/>
            </padding>
        </TextField>

<!--        密码输入框(PasswordField)
            PasswordField 是一个单行密码内容输入区域，同样设置了宽高，以及提示文字基本的使用方式与 TextField 一致，当然在你后面后去他里面内容的时候，是明文的
-->
        <PasswordField id="userPassword" layoutX="200" layoutY="255" prefHeight="45" prefWidth="250" promptText="密码">
            <padding>
                <Insets left="10"/>
            </padding>
        </PasswordField>

<!--        登陆按钮(Button)
            Button 按钮类的操作都可以使用，在这里设置好宽高，以及文字内容 text="登 陆"
            同样在这里我们也设置了相对的展示位置，这个位置是相对的，相遇对当前父元素
-->
        <Button id="login_button" styleClass="login_button" layoutX="200" layoutY="345" prefWidth="250" prefHeight="45" text="登 陆"/>

        <!--
        版本(Label)
        Label 一般可以设置文字、图片等展示内容。是一个轻量级元素
        在这里我们设置了版本编号，和自己一些内容信息
        同时我们还设置了字体的大小，关于字体后面我们还会使用到 css（这里的 css 是 javafx 的 css，除名称不同外基本一致）
        -->
        <Label id="slogan" layoutX="5" layoutY="398" prefWidth="400" prefHeight="15"
               text="v1.0 崔小志 | 52sql.top">
            <font>
                <Font size="12"/>
            </font>
        </Label>
    </children>
</Pane>